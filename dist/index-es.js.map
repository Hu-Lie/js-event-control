{"version":3,"file":"index-es.js","sources":["../src/js/Subscriber.js","../src/js/Node.js","../src/js/SubscriberLinkedList.js","../src/js/EventControl.js"],"sourcesContent":["const DEFAULT_OPTION = {\r\n  priority: 0, // 默认优先级为0\r\n  once: false, // 默认不是一次性订阅\r\n  stopNextEvent: false, // 默认不会阻止下一个事件\r\n};\r\n\r\nclass Subscriber {\r\n  static defaultOption = DEFAULT_OPTION;\r\n\r\n  constructor(eventName, fn, option = {}) {\r\n    if (typeof eventName !== \"string\") {\r\n      throw new TypeError(\"eventName must be a string\");\r\n    }\r\n    if (typeof fn !== \"function\") {\r\n      throw new TypeError(\"fn must be a function\");\r\n    }\r\n\r\n    this.eventName = eventName; // 事件名称\r\n    this.fn = fn; // 事件处理函数\r\n    this.option = { ...Subscriber.defaultOption, ...option }; // 合并默认选项和传入选项\r\n  }\r\n\r\n  onMessage(args) {\r\n    let fnResult = this.fn(...args); // 调用订阅的回调函数\r\n\r\n    if (this.option.stopNextEvent) {\r\n      fnResult = true; // 如果选项中设置了 stopNextEvent，则覆盖函数返回值为 true\r\n    }\r\n\r\n    return {\r\n      once: this.option.once, // 返回是否一次性订阅\r\n      stopNextEvent: fnResult, // 返回是否阻止下一个事件\r\n    };\r\n  }\r\n\r\n  get priority() {\r\n    return this.option.priority; // 获取订阅者的优先级\r\n  }\r\n}\r\n\r\nexport default Subscriber;\r\n","class Node {\r\n  constructor(data, next = null) {\r\n    this.data = data;\r\n    this.next = next;\r\n  }\r\n}\r\n\r\nexport default Node;","import Node from \"./Node\";\r\nclass SubscriberLinkedList {\r\n  constructor() {\r\n    this.head = null;\r\n  }\r\n\r\n  insert(data) {\r\n    const newNode = new Node(data);\r\n    if (!this.head || data.priority > this.head.data.priority) {\r\n      newNode.next = this.head;\r\n      this.head = newNode;\r\n    } else {\r\n      let current = this.head;\r\n      while (current.next && current.next.data.priority >= data.priority) {\r\n        current = current.next;\r\n      }\r\n      newNode.next = current.next;\r\n      current.next = newNode;\r\n    }\r\n  }\r\n\r\n  remove(data) {\r\n    if (!this.head) return;\r\n    if (this.head.data === data) {\r\n      this.head = this.head.next;\r\n      return;\r\n    }\r\n    let current = this.head;\r\n    while (current.next && current.next.data !== data) {\r\n      current = current.next;\r\n    }\r\n    if (current.next) {\r\n      current.next = current.next.next;\r\n    }\r\n  }\r\n\r\n  *[Symbol.iterator]() {\r\n    let current = this.head;\r\n    while (current) {\r\n      yield current.data;\r\n      current = current.next;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default SubscriberLinkedList;","import Subscriber from \"./Subscriber\";\r\nimport SubscriberLinkedList from \"./SubscriberLinkedList\";\r\n\r\nclass EventControl {\r\n  constructor() {\r\n    this.subscribersMap = new Map(); // 存储事件名称和对应的订阅者链表\r\n  }\r\n\r\n  subscribe(eventName, fn, option = {}) {\r\n    if (typeof eventName !== \"string\") {\r\n      throw new TypeError(\"eventName must be a string\"); // 检查事件名称类型\r\n    }\r\n    if (typeof fn !== \"function\") {\r\n      throw new TypeError(\"fn must be a function\"); // 检查回调函数类型\r\n    }\r\n\r\n    let subscribers = this.subscribersMap.get(eventName);\r\n\r\n    if (!subscribers) {\r\n      subscribers = new SubscriberLinkedList(); // 如果没有订阅者链表，则创建一个新的\r\n      this.subscribersMap.set(eventName, subscribers);\r\n    }\r\n\r\n    const subscriber = new Subscriber(eventName, fn, option); // 创建新的订阅者实例\r\n    subscribers.insert(subscriber); // 按优先级插入到订阅者链表\r\n\r\n    return subscriber;\r\n  }\r\n\r\n  unsubscribe(eventName, fn) {\r\n    const subscribers = this.subscribersMap.get(eventName);\r\n    if (subscribers) {\r\n      for (const subscriber of subscribers) {\r\n        if (subscriber.fn === fn) {\r\n          subscribers.remove(subscriber); // 从订阅者链表中移除\r\n          break;\r\n        }\r\n      }\r\n      if (!subscribers.head) {\r\n        this.subscribersMap.delete(eventName); // 如果没有订阅者了，删除事件条目\r\n      }\r\n    }\r\n  }\r\n\r\n  notify(eventName, args) {\r\n    const subscribers = this.subscribersMap.get(eventName);\r\n    if (subscribers) {\r\n      const argsArray = Array.isArray(args) ? args : [args]; // 确保参数是数组\r\n\r\n      for (const subscriber of subscribers) {\r\n        const { once, stopNextEvent } = subscriber.onMessage(argsArray); // 通知订阅者\r\n\r\n        if (once) {\r\n          this.unsubscribe(eventName, subscriber.fn); // 如果是一次性订阅，移除订阅者\r\n        }\r\n\r\n        if (stopNextEvent) {\r\n          break; // 如果设置了阻止下一个事件，停止通知后续订阅者\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default EventControl;\r\n"],"names":["DEFAULT_OPTION","priority","once","stopNextEvent","Subscriber","defaultOption","constructor","eventName","fn","option","TypeError","onMessage","args","fnResult","Node","data","next","SubscriberLinkedList","head","insert","newNode","current","remove","Symbol","iterator","EventControl","subscribersMap","Map","subscribe","subscribers","get","set","subscriber","unsubscribe","delete","notify","argsArray","Array","isArray"],"mappings":"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"}