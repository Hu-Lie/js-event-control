{"version":3,"file":"index-cjs.js","sources":["../src/js/Subscriber.js","../src/js/EventControl.js"],"sourcesContent":["const mergeOption = function mergeOption(option, beforeOption) {\r\n  const mergedOption = {};\r\n  Object.keys(beforeOption).forEach((key) => {\r\n    if (Object.hasOwnProperty.call(option, key)) {\r\n      mergedOption[key] = option[key];\r\n    } else {\r\n      mergedOption[key] = beforeOption[key];\r\n    }\r\n  });\r\n  return mergedOption;\r\n};\r\n\r\nconst DEFAULT_OPTION = {\r\n  priority: 0,\r\n  once: false,\r\n  stopNextEvent: false,\r\n};\r\n\r\nclass Subscriber {\r\n  static index = 1;\r\n\r\n  static defaultOption = DEFAULT_OPTION;\r\n\r\n  constructor(eventName, fn, option) {\r\n    this.index = Subscriber.index;\r\n    Subscriber.index += 1;\r\n    this.eventName = eventName;\r\n    this.fn = fn;\r\n    this.option = mergeOption(option, Subscriber.defaultOption);\r\n  }\r\n\r\n  onMessage(args) {\r\n    let fnResult = this.fn(...args);\r\n\r\n    if (this.option.stopNextEvent) {\r\n      fnResult = true;\r\n    }\r\n\r\n    return {\r\n      once: this.option.once,\r\n      stopNextEvent: fnResult,\r\n    };\r\n  }\r\n\r\n  get priority() {\r\n    return this.option.priority;\r\n  }\r\n}\r\n\r\nexport default Subscriber;\r\n","import Subscriber from \"./Subscriber\";\r\n\r\nclass EventControl {\r\n  constructor() {\r\n    this.subscribersMap = new Map();\r\n  }\r\n\r\n  subscribe(eventName, fn, option) {\r\n    let subscribers = this.subscribersMap.get(eventName);\r\n\r\n    if (!subscribers) {\r\n      subscribers = [];\r\n      this.subscribersMap.set(eventName, subscribers);\r\n    }\r\n\r\n    const subscriber = new Subscriber(eventName, fn, option || {});\r\n    subscribers.push(subscriber);\r\n\r\n    if (\r\n      subscriber.priority\r\n      || subscribers[subscribers.length - 1].priority < 0\r\n    ) {\r\n      subscribers.sort((a, b) => b.priority - a.priority);\r\n    }\r\n\r\n    return subscriber;\r\n  }\r\n\r\n  unsubscribe(eventName, fn) {\r\n    const subscribers = this.subscribersMap.get(eventName);\r\n\r\n    const index = this.indexOfSubscribe(eventName, fn);\r\n    if (index !== -1) {\r\n      subscribers.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  indexOfSubscribe(eventName, fn) {\r\n    const subscribers = this.subscribersMap.get(eventName);\r\n    let index = -1;\r\n    if (subscribers && subscribers.length) {\r\n      index = subscribers.findIndex((i) => i.fn === fn);\r\n    }\r\n    return index;\r\n  }\r\n\r\n  notify(eventName, args) {\r\n    const subscribers = this.subscribersMap.get(eventName);\r\n    if (subscribers) {\r\n      let argsCopy = args;\r\n      if (!(argsCopy instanceof Array)) {\r\n        argsCopy = [argsCopy];\r\n      }\r\n      for (let i = 0; i < subscribers.length; i += 1) {\r\n        const subscriber = subscribers[i];\r\n        const { once, stopNextEvent } = subscriber.onMessage(argsCopy);\r\n\r\n        if (once) {\r\n          this.unsubscribe(eventName, subscriber.fn);\r\n          i -= 1;\r\n        }\r\n\r\n        if (stopNextEvent) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default EventControl;\r\n"],"names":["mergeOption","option","beforeOption","mergedOption","Object","keys","forEach","key","hasOwnProperty","call","DEFAULT_OPTION","priority","once","stopNextEvent","Subscriber","eventName","fn","_classCallCheck","index","defaultOption","_createClass","value","onMessage","args","fnResult","apply","_toConsumableArray","get","_defineProperty","EventControl","subscribersMap","Map","subscribe","subscribers","set","subscriber","push","length","sort","a","b","unsubscribe","indexOfSubscribe","splice","findIndex","i","notify","argsCopy","Array","_subscriber$onMessage"],"mappings":"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"}